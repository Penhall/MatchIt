// vite.config.ts - Configuração corrigida para integração com backend
import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import path from 'path';

export default defineConfig({
  base: '/',
  plugins: [react()],
  
  // ✅ Definição de tipos de ambiente
  define: {
    __API_URL__: JSON.stringify(process.env.VITE_API_URL || 'http://localhost:3000/api'),
  },
  
  // Resolução de aliases
  resolve: {
    alias: {
      '@': path.resolve(__dirname, './src'),
      '@context': path.resolve(__dirname, './src/context'),
      '@components': path.resolve(__dirname, './src/components'),
      '@components/common': path.resolve(__dirname, './src/components/common'),
      '@services': path.resolve(__dirname, './src/services'),
      '@hooks': path.resolve(__dirname, './src/hooks'),
      '@utils': path.resolve(__dirname, './src/utils'),
    }
  },
  
  // Configuração do servidor de desenvolvimento
  server: {
    port: 5173,
    host: true,
    open: true,
    strictPort: false,
    
    // ✅ CORREÇÃO: Proxy sem rewrite problemático
    proxy: {
      '/api': {
        target: 'http://localhost:3000',
        changeOrigin: true,
        secure: false,
        timeout: 30000,
        
        // ❌ REMOVIDO: rewrite que causava problemas
        
        // Log detalhado para debug
        configure: (proxy) => {
          proxy.on('error', (err, req, res) => {
            console.error('🔴 Proxy Error:', err.message);
            console.error('🔴 Request URL:', req.url);
          });
          
          proxy.on('proxyReq', (proxyReq, req) => {
            console.log('🚀 Proxy Request:', req.method, req.url);
            console.log('🎯 Target:', `http://localhost:3000${req.url}`);
          });
          
          proxy.on('proxyRes', (proxyRes, req) => {
            const emoji = proxyRes.statusCode < 400 ? '✅' : '🔴';
            console.log(`${emoji} Proxy Response:`, proxyRes.statusCode, req.url);
          });
        }
      },
      
      // Proxy para uploads
      '/uploads': {
        target: 'http://localhost:3000',
        changeOrigin: true,
        secure: false
      }
    }
  },
  
  // Configuração de preview (produção local)
  preview: {
    port: 4173,
    host: true,
    open: true,
    
    // Mesmo proxy para preview
    proxy: {
      '/api': {
        target: 'http://localhost:3000',
        changeOrigin: true,
        secure: false
      },
      '/uploads': {
        target: 'http://localhost:3000',
        changeOrigin: true,
        secure: false
      }
    }
  },
  
  // Configuração de build
  build: {
    outDir: 'dist',
    assetsDir: 'assets',
    emptyOutDir: true,
    manifest: true,
    sourcemap: true,
    
    // Otimizações
    rollupOptions: {
      output: {
        manualChunks: {
          vendor: ['react', 'react-dom'],
          router: ['react-router-dom'],
          ui: ['@heroicons/react'],
          utils: ['axios']
        }
      }
    }
  },
  
  // Otimização de dependências
  optimizeDeps: {
    include: [
      'react',
      'react-dom',
      'react-router-dom',
      'axios'
    ]
  },
  
  // Configuração CSS
  css: {
    devSourcemap: true
  }
});