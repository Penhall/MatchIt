#!/bin/bash
# scripts/fix-vite-menu.sh - Menu para escolher estrat√©gia de corre√ß√£o

echo "üîß CORRE√á√ÉO DOS ERROS DO VITE - MENU"
echo "===================================="
echo ""
echo "üìã Problemas identificados:"
echo "   ‚ùå Arquivos .ts com JSX (StyleAdjustmentScreen, SettingsScreen)"
echo "   ‚ùå Depend√™ncias n√£o instaladas (react-router-dom, axios, i18next)"
echo "   ‚ùå Componentes React Native em projeto React Web"
echo "   ‚ùå API apontando para porta 3001 em vez de 3000"
echo ""
echo "Escolha a estrat√©gia de corre√ß√£o:"
echo ""
echo "1) üöÄ CORRE√á√ÉO R√ÅPIDA - Instalar deps + renomear arquivos"
echo "2) üîß CORRE√á√ÉO COMPLETA - Migra√ß√£o React Native ‚Üí React Web"
echo "3) ‚ö° SOLU√á√ÉO TEMPOR√ÅRIA - Desativar arquivos problem√°ticos"
echo "4) üì¶ APENAS DEPEND√äNCIAS - S√≥ instalar o que est√° faltando"
echo "5) üß™ DIAGN√ìSTICO - Ver detalhes dos problemas"
echo ""
read -p "Digite sua escolha (1-5): " choice

case $choice in
    1)
        echo ""
        echo "üöÄ CORRE√á√ÉO R√ÅPIDA SELECIONADA"
        echo "=============================="
        
        # Instalar depend√™ncias
        echo "üì¶ Instalando depend√™ncias..."
        npm install react-router-dom axios i18next react-i18next i18next-browser-languagedetector --silent
        
        # Renomear arquivos
        echo "üìù Renomeando arquivos..."
        [ -f "screens/StyleAdjustmentScreen.ts" ] && mv "screens/StyleAdjustmentScreen.ts" "screens/StyleAdjustmentScreen.tsx"
        [ -f "screens/SettingsScreen.ts" ] && mv "screens/SettingsScreen.ts" "screens/SettingsScreen.tsx"
        
        # Corrigir API
        echo "üîß Corrigindo API..."
        [ -f "src/services/api.ts" ] && sed -i.bak 's|localhost:3001|localhost:3000|g' "src/services/api.ts"
        
        echo "‚úÖ Corre√ß√£o r√°pida conclu√≠da!"
        echo "üöÄ Teste: npm run dev"
        ;;
        
    2)
        echo ""
        echo "üîß CORRE√á√ÉO COMPLETA SELECIONADA"
        echo "==============================="
        echo "Executando script completo..."
        chmod +x scripts/fix-vite-errors.sh
        ./scripts/fix-vite-errors.sh
        ;;
        
    3)
        echo ""
        echo "‚ö° SOLU√á√ÉO TEMPOR√ÅRIA SELECIONADA"
        echo "================================"
        
        # Instalar apenas depend√™ncias cr√≠ticas
        echo "üì¶ Instalando depend√™ncias b√°sicas..."
        npm install react-router-dom axios --silent
        
        # Criar diret√≥rio tempor√°rio
        mkdir -p "temp_disabled"
        
        # Mover arquivos problem√°ticos
        echo "üìÅ Movendo arquivos problem√°ticos..."
        [ -f "screens/StyleAdjustmentScreen.ts" ] && mv "screens/StyleAdjustmentScreen.ts" "temp_disabled/"
        [ -f "screens/SettingsScreen.ts" ] && mv "screens/SettingsScreen.ts" "temp_disabled/"
        
        # Corrigir API
        [ -f "src/services/api.ts" ] && sed -i.bak 's|localhost:3001|localhost:3000|g' "src/services/api.ts"
        
        echo "‚úÖ Arquivos problem√°ticos temporariamente desabilitados"
        echo "üìÅ Arquivos movidos para: temp_disabled/"
        echo "üöÄ Teste: npm run dev"
        echo "üí° Reative os arquivos quando estiver pronto para migrar"
        ;;
        
    4)
        echo ""
        echo "üì¶ APENAS DEPEND√äNCIAS SELECIONADO"
        echo "=================================="
        
        deps=(
            "react-router-dom"
            "axios" 
            "i18next"
            "react-i18next"
            "i18next-browser-languagedetector"
        )
        
        echo "Instalando depend√™ncias..."
        for dep in "${deps[@]}"; do
            if ! npm list "$dep" >/dev/null 2>&1; then
                echo "üì¶ $dep..."
                npm install "$dep" --silent
            else
                echo "‚úÖ $dep j√° instalado"
            fi
        done
        
        echo "‚úÖ Depend√™ncias instaladas!"
        echo "‚ö†Ô∏è  Ainda h√° problemas nos arquivos .ts com JSX"
        echo "üöÄ Teste: npm run dev (pode ainda ter erros)"
        ;;
        
    5)
        echo ""
        echo "üß™ DIAGN√ìSTICO DETALHADO"
        echo "======================="
        
        echo "üìã Verificando depend√™ncias..."
        deps=("react-router-dom" "axios" "i18next" "react-i18next")
        for dep in "${deps[@]}"; do
            if npm list "$dep" >/dev/null 2>&1; then
                echo "   ‚úÖ $dep"
            else
                echo "   ‚ùå $dep (FALTANDO)"
            fi
        done
        
        echo ""
        echo "üìã Verificando arquivos problem√°ticos..."
        problem_files=("screens/StyleAdjustmentScreen.ts" "screens/SettingsScreen.ts")
        for file in "${problem_files[@]}"; do
            if [ -f "$file" ]; then
                echo "   ‚ùå $file (extens√£o .ts com JSX)"
                if grep -q "TouchableOpacity\|View style=" "$file" 2>/dev/null; then
                    echo "      Cont√©m componentes React Native"
                fi
            else
                echo "   ‚ÑπÔ∏è  $file (n√£o encontrado)"
            fi
        done
        
        echo ""
        echo "üìã Verificando configura√ß√£o API..."
        if [ -f "src/services/api.ts" ] && grep -q "3001" "src/services/api.ts"; then
            echo "   ‚ùå API ainda aponta para porta 3001"
        else
            echo "   ‚úÖ API configurada corretamente"
        fi
        
        echo ""
        echo "üí° Execute uma das outras op√ß√µes para corrigir"
        ;;
        
    *)
        echo "‚ùå Op√ß√£o inv√°lida"
        exit 1
        ;;
esac

echo ""
echo "================================================================"
echo " PR√ìXIMOS PASSOS"
echo "================================================================"
echo ""
echo "üöÄ Para testar:"
echo "   Terminal 1: npm run server    (backend porta 3000)"
echo "   Terminal 2: npm run dev       (frontend porta 5173)"
echo ""
echo "üéØ URLs esperadas:"
echo "   Frontend: http://localhost:5173"
echo "   Backend:  http://localhost:3000"
echo ""
echo "‚ùå Se ainda houver erros:"
echo "   - Execute op√ß√£o 2 (corre√ß√£o completa)"
echo "   - Ou op√ß√£o 3 (solu√ß√£o tempor√°ria)"
echo ""
echo "‚úÖ Menu de corre√ß√£o finalizado!"
