# Dockerfile.admin - Container para o Dashboard Administrativo MatchIt
FROM python:3.9-slim

# Labels para identificação
LABEL maintainer="MatchIt Team"
LABEL description="Dashboard Administrativo MatchIt - Streamlit"
LABEL version="1.0.0"

# Definir variáveis de ambiente
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV STREAMLIT_SERVER_PORT=8501
ENV STREAMLIT_SERVER_ADDRESS=0.0.0.0
ENV STREAMLIT_SERVER_HEADLESS=true
ENV STREAMLIT_BROWSER_GATHER_USAGE_STATS=false

# Criar usuário não-root para segurança
RUN groupadd -r streamlit && useradd -r -g streamlit streamlit

# Instalar dependências do sistema
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    software-properties-common \
    git \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Definir diretório de trabalho
WORKDIR /app

# Copiar requirements primeiro (para melhor cache do Docker)
COPY frontend.Admin/streamlit/requirements.txt .

# Instalar dependências Python
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copiar código da aplicação
COPY frontend.Admin/streamlit/ .

# Criar diretórios necessários
RUN mkdir -p /app/logs /app/uploads /app/static

# Ajustar permissões
RUN chown -R streamlit:streamlit /app
USER streamlit

# Healthcheck para verificar se a aplicação está funcionando
HEALTHCHECK --interval=30s --timeout=30s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8501/_stcore/health || exit 1

# Expor porta do Streamlit
EXPOSE 8501

# Comando para iniciar a aplicação
CMD ["streamlit", "run", "app.py", "--server.port=8501", "--server.address=0.0.0.0", "--server.headless=true"]